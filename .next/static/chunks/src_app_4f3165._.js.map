{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/T%20O%20S%20H%20I%20B%20A/Desktop/Tax-Lodge/client/src/app/components/PayCalculator.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\n\r\ntype CalculationResult = {\r\n  gross: number;\r\n  superAmount: number;\r\n  tax: number;\r\n  medicareLevy: number;\r\n  helpDebtAmount: number;\r\n  netIncome: number;\r\n};\r\n\r\nexport default function PayCalculator() {\r\n  const [income, setIncome] = useState<number>(0);\r\n  const [period, setPeriod] = useState<\"annually\" | \"monthly\" | \"fortnightly\" | \"weekly\">(\"annually\");\r\n  const [includeSuper, setIncludeSuper] = useState<boolean>(false);\r\n  const [includeHelpDebt, setIncludeHelpDebt] = useState<boolean>(false);\r\n  const [isNonResident, setIsNonResident] = useState<boolean>(false);\r\n  const [result, setResult] = useState<CalculationResult | null>(null);\r\n\r\n  // Function to calculate tax and deductions\r\n  const calculateTax = () => {\r\n    let annualIncome = income;\r\n\r\n    // Convert income to annual amount\r\n    if (period === \"monthly\") annualIncome *= 12;\r\n    else if (period === \"fortnightly\") annualIncome *= 26;\r\n    else if (period === \"weekly\") annualIncome *= 52;\r\n\r\n    let superRate = includeSuper ? 0.105 : 0; // Superannuation 10.5%\r\n    let superAmount = annualIncome * superRate;\r\n\r\n    let tax = 0;\r\n    if (!isNonResident) {\r\n      // ✅ **Fixed Australian Tax Brackets**\r\n      if (annualIncome > 180000) tax = (annualIncome - 180000) * 0.45 + 51667;\r\n      else if (annualIncome > 120000) tax = (annualIncome - 120000) * 0.37 + 29467;\r\n      else if (annualIncome > 45000) tax = (annualIncome - 45000) * 0.325 + 5092;\r\n      else if (annualIncome > 18200) tax = (annualIncome - 18200) * 0.19;\r\n    } else {\r\n      // ✅ **Fixed Non-Resident Tax Brackets**\r\n      if (annualIncome > 180000) tax = (annualIncome - 180000) * 0.45 + 61200;\r\n      else if (annualIncome > 120000) tax = (annualIncome - 120000) * 0.37 + 31200;\r\n      else if (annualIncome > 45000) tax = (annualIncome - 45000) * 0.325 + 14625;\r\n      else tax = annualIncome * 0.325; // No tax-free threshold\r\n    }\r\n\r\n    let medicareLevy = isNonResident ? 0 : annualIncome * 0.02; // 2% Medicare Levy for residents\r\n    let helpDebtAmount = includeHelpDebt ? annualIncome * 0.05 : 0; // 5% HELP Debt repayment\r\n\r\n    let netIncome = annualIncome - (tax + medicareLevy + helpDebtAmount);\r\n\r\n    setResult({\r\n      gross: annualIncome,\r\n      superAmount,\r\n      tax,\r\n      medicareLevy,\r\n      helpDebtAmount,\r\n      netIncome,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <h1 className=\"text-2xl font-bold text-center mb-6\">Welcome To Pay Calculator</h1>\r\n      <div className=\"bg-gray-50 p-6 rounded-lg shadow-md\">\r\n        <label className=\"block text-lg font-semibold\">Gross Income (Before Tax)</label>\r\n        <input\r\n          type=\"number\"\r\n          value={income}\r\n          onChange={(e) => setIncome(parseFloat(e.target.value) || 0)}\r\n          className=\"w-full p-2 border rounded mt-2\"\r\n        />\r\n\r\n        {/* Period Selection */}\r\n        <div className=\"flex justify-between mt-4\">\r\n          {[\"annually\", \"monthly\", \"fortnightly\", \"weekly\"].map((p) => (\r\n            <button\r\n              key={p}\r\n              onClick={() => setPeriod(p as any)}\r\n              className={`px-4 py-2 rounded ${period === p ? \"bg-orange-500 text-white\" : \"bg-gray-300\"}`}\r\n            >\r\n              {p.toUpperCase()}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Toggle Options */}\r\n        <div className=\"mt-4\">\r\n          <label className=\"block\">Includes Superannuation?</label>\r\n          <button className={`px-4 py-2 rounded ${includeSuper ? \"bg-orange-500 text-white\" : \"bg-gray-300\"}`} onClick={() => setIncludeSuper(!includeSuper)}>\r\n            {includeSuper ? \"YES\" : \"NO\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mt-2\">\r\n          <label className=\"block\">Includes HELP Debt?</label>\r\n          <button className={`px-4 py-2 rounded ${includeHelpDebt ? \"bg-orange-500 text-white\" : \"bg-gray-300\"}`} onClick={() => setIncludeHelpDebt(!includeHelpDebt)}>\r\n            {includeHelpDebt ? \"YES\" : \"NO\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mt-2\">\r\n          <label className=\"block\">Non-Resident?</label>\r\n          <button className={`px-4 py-2 rounded ${isNonResident ? \"bg-orange-500 text-white\" : \"bg-gray-300\"}`} onClick={() => setIsNonResident(!isNonResident)}>\r\n            {isNonResident ? \"YES\" : \"NO\"}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Calculate Button */}\r\n        <button onClick={calculateTax} className=\"mt-4 px-6 py-2 bg-orange-500 text-white rounded\">\r\n          CALCULATE\r\n        </button>\r\n      </div>\r\n\r\n      {/* Results */}\r\n      {result && (\r\n        <div className=\"mt-6 p-4 bg-gray-100 rounded\">\r\n          <h3 className=\"text-lg font-bold\">Calculation Result</h3>\r\n          <table className=\"w-full border-collapse border mt-2\">\r\n            <thead>\r\n              <tr className=\"bg-gray-200\">\r\n                <th className=\"border p-2\">Year</th>\r\n                <th className=\"border p-2\">Annually</th>\r\n                <th className=\"border p-2\">Monthly</th>\r\n                <th className=\"border p-2\">Fortnightly</th>\r\n                <th className=\"border p-2\">Weekly</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {[\"gross\", \"superAmount\", \"tax\", \"medicareLevy\", \"helpDebtAmount\", \"netIncome\"].map((key) => (\r\n                <tr key={key}>\r\n                  <td className=\"border p-2 capitalize\">{key.replace(\"Amount\", \"\").replace(/([A-Z])/g, \" $1\")}</td>\r\n                  {[1, 12, 26, 52].map((divider, i) => (\r\n                    <td key={i} className=\"border p-2\">${(result[key as keyof CalculationResult] / divider).toFixed(2)}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAYe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqD;IACxF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC5D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B;IAE/D,2CAA2C;IAC3C,MAAM,eAAe;QACnB,IAAI,eAAe;QAEnB,kCAAkC;QAClC,IAAI,WAAW,WAAW,gBAAgB;aACrC,IAAI,WAAW,eAAe,gBAAgB;aAC9C,IAAI,WAAW,UAAU,gBAAgB;QAE9C,IAAI,YAAY,eAAe,QAAQ,GAAG,uBAAuB;QACjE,IAAI,cAAc,eAAe;QAEjC,IAAI,MAAM;QACV,IAAI,CAAC,eAAe;YAClB,sCAAsC;YACtC,IAAI,eAAe,QAAQ,MAAM,CAAC,eAAe,MAAM,IAAI,OAAO;iBAC7D,IAAI,eAAe,QAAQ,MAAM,CAAC,eAAe,MAAM,IAAI,OAAO;iBAClE,IAAI,eAAe,OAAO,MAAM,CAAC,eAAe,KAAK,IAAI,QAAQ;iBACjE,IAAI,eAAe,OAAO,MAAM,CAAC,eAAe,KAAK,IAAI;QAChE,OAAO;YACL,wCAAwC;YACxC,IAAI,eAAe,QAAQ,MAAM,CAAC,eAAe,MAAM,IAAI,OAAO;iBAC7D,IAAI,eAAe,QAAQ,MAAM,CAAC,eAAe,MAAM,IAAI,OAAO;iBAClE,IAAI,eAAe,OAAO,MAAM,CAAC,eAAe,KAAK,IAAI,QAAQ;iBACjE,MAAM,eAAe,OAAO,wBAAwB;QAC3D;QAEA,IAAI,eAAe,gBAAgB,IAAI,eAAe,MAAM,iCAAiC;QAC7F,IAAI,iBAAiB,kBAAkB,eAAe,OAAO,GAAG,yBAAyB;QAEzF,IAAI,YAAY,eAAe,CAAC,MAAM,eAAe,cAAc;QAEnE,UAAU;YACR,OAAO;YACP;YACA;YACA;YACA;YACA;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAM,WAAU;kCAA8B;;;;;;kCAC/C,6LAAC;wBACC,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wBACzD,WAAU;;;;;;kCAIZ,6LAAC;wBAAI,WAAU;kCACZ;4BAAC;4BAAY;4BAAW;4BAAe;yBAAS,CAAC,GAAG,CAAC,CAAC,kBACrD,6LAAC;gCAEC,SAAS,IAAM,UAAU;gCACzB,WAAW,CAAC,kBAAkB,EAAE,WAAW,IAAI,6BAA6B,eAAe;0CAE1F,EAAE,WAAW;+BAJT;;;;;;;;;;kCAUX,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,WAAU;0CAAQ;;;;;;0CACzB,6LAAC;gCAAO,WAAW,CAAC,kBAAkB,EAAE,eAAe,6BAA6B,eAAe;gCAAE,SAAS,IAAM,gBAAgB,CAAC;0CAClI,eAAe,QAAQ;;;;;;;;;;;;kCAI5B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,WAAU;0CAAQ;;;;;;0CACzB,6LAAC;gCAAO,WAAW,CAAC,kBAAkB,EAAE,kBAAkB,6BAA6B,eAAe;gCAAE,SAAS,IAAM,mBAAmB,CAAC;0CACxI,kBAAkB,QAAQ;;;;;;;;;;;;kCAI/B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,WAAU;0CAAQ;;;;;;0CACzB,6LAAC;gCAAO,WAAW,CAAC,kBAAkB,EAAE,gBAAgB,6BAA6B,eAAe;gCAAE,SAAS,IAAM,iBAAiB,CAAC;0CACpI,gBAAgB,QAAQ;;;;;;;;;;;;kCAK7B,6LAAC;wBAAO,SAAS;wBAAc,WAAU;kCAAkD;;;;;;;;;;;;YAM5F,wBACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoB;;;;;;kCAClC,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;0CACC,cAAA,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;sDAC3B,6LAAC;4CAAG,WAAU;sDAAa;;;;;;;;;;;;;;;;;0CAG/B,6LAAC;0CACE;oCAAC;oCAAS;oCAAe;oCAAO;oCAAgB;oCAAkB;iCAAY,CAAC,GAAG,CAAC,CAAC,oBACnF,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAyB,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,YAAY;;;;;;4CACpF;gDAAC;gDAAG;gDAAI;gDAAI;6CAAG,CAAC,GAAG,CAAC,CAAC,SAAS,kBAC7B,6LAAC;oDAAW,WAAU;;wDAAa;wDAAE,CAAC,MAAM,CAAC,IAA+B,GAAG,OAAO,EAAE,OAAO,CAAC;;mDAAvF;;;;;;uCAHJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAazB;GApIwB;KAAA"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}